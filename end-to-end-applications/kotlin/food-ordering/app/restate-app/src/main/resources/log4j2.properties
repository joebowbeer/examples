# Set to debug or trace if log4j initialization is failing
status = warn

# Console appender configuration
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{HH:mm:ss} %-5p %notEmpty{[%X{restateInvocationTarget}]}%notEmpty{[%X{restateInvocationId}]} - %m%n

# Filter out logging during replay
appender.console.filter.composite.type = Filters

appender.console.filter.composite.f1.type = ContextMapFilter
appender.console.filter.composite.f1.onMatch = DENY
appender.console.filter.composite.f1.onMismatch = NEUTRAL
appender.console.filter.composite.f1.0.type = KeyValuePair
appender.console.filter.composite.f1.0.key = restateInvocationStatus
appender.console.filter.composite.f1.0.value = REPLAYING

# Custom filter to exclude logs containing "OrderWorkflow/getStatus"
appender.console.filter.composite.f2.type = ContextMapFilter
appender.console.filter.composite.f2.onMatch = DENY
appender.console.filter.composite.f2.onMismatch = NEUTRAL
appender.console.filter.composite.f2.0.type = KeyValuePair
appender.console.filter.composite.f2.0.key = restateInvocationTarget
appender.console.filter.composite.f2.0.value = OrderWorkflow/getStatus

# Restate logs to debug level
logger.app.name = dev.restate
logger.app.level = debug
logger.app.additivity = false
logger.app.appenderRef.console.ref = consoleLogger

# Root logger
rootLogger.level = info
rootLogger.appenderRef.stdout.ref = consoleLogger